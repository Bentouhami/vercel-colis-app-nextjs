
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.PasswordResetTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  expiresAt: 'expiresAt',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  envoiId: 'envoiId',
  method: 'method',
  status: 'status',
  amount: 'amount',
  transactionId: 'transactionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  name: 'name',
  birthDate: 'birthDate',
  email: 'email',
  phoneNumber: 'phoneNumber',
  password: 'password',
  image: 'image',
  role: 'role',
  isVerified: 'isVerified',
  emailVerified: 'emailVerified',
  verificationToken: 'verificationToken',
  verificationTokenExpires: 'verificationTokenExpires',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isEnterprise: 'isEnterprise',
  lastLogin: 'lastLogin'
};

exports.Prisma.AccountScalarFieldEnum = {
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AgencyClientsScalarFieldEnum = {
  clientId: 'clientId',
  agencyId: 'agencyId'
};

exports.Prisma.AgencyStaffScalarFieldEnum = {
  id: 'id',
  staffId: 'staffId',
  agencyId: 'agencyId',
  staffRole: 'staffRole'
};

exports.Prisma.ActivityLogScalarFieldEnum = {
  id: 'id',
  activityType: 'activityType',
  staffId: 'staffId',
  agencyId: 'agencyId',
  details: 'details',
  staffRole: 'staffRole',
  createdAt: 'createdAt'
};

exports.Prisma.AuthenticatorScalarFieldEnum = {
  credentialID: 'credentialID',
  userId: 'userId',
  providerAccountId: 'providerAccountId',
  credentialPublicKey: 'credentialPublicKey',
  counter: 'counter',
  credentialDeviceType: 'credentialDeviceType',
  credentialBackedUp: 'credentialBackedUp',
  transports: 'transports'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  message: 'message',
  agencyId: 'agencyId',
  destinataireId: 'destinataireId',
  clientId: 'clientId',
  envoiId: 'envoiId',
  isRead: 'isRead',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VatRateScalarFieldEnum = {
  id: 'id',
  countryId: 'countryId',
  itemClassId: 'itemClassId',
  vatPercent: 'vatPercent',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  vatType: 'vatType'
};

exports.Prisma.CityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  latitude: 'latitude',
  longitude: 'longitude',
  countryId: 'countryId'
};

exports.Prisma.CountryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  iso2: 'iso2',
  iso3: 'iso3',
  phonecode: 'phonecode',
  capital: 'capital',
  currency: 'currency',
  latitude: 'latitude',
  longitude: 'longitude',
  emoji: 'emoji'
};

exports.Prisma.TimezoneScalarFieldEnum = {
  id: 'id',
  zoneName: 'zoneName',
  gmtOffset: 'gmtOffset',
  abbreviation: 'abbreviation',
  countryId: 'countryId'
};

exports.Prisma.UserAddressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  addressId: 'addressId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  addressType: 'addressType'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  street: 'street',
  complement: 'complement',
  streetNumber: 'streetNumber',
  boxNumber: 'boxNumber',
  cityId: 'cityId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AgencyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  location: 'location',
  phoneNumber: 'phoneNumber',
  email: 'email',
  vatNumber: 'vatNumber',
  addressId: 'addressId',
  capacity: 'capacity',
  availableSlots: 'availableSlots',
  updatedAt: 'updatedAt',
  createdAt: 'createdAt',
  createdById: 'createdById'
};

exports.Prisma.ClientDestinataireScalarFieldEnum = {
  id: 'id',
  clientId: 'clientId',
  destinataireId: 'destinataireId',
  createdAt: 'createdAt'
};

exports.Prisma.CouponScalarFieldEnum = {
  id: 'id',
  couponCode: 'couponCode',
  discountAmount: 'discountAmount',
  discountPercentage: 'discountPercentage',
  numberOfUses: 'numberOfUses',
  startDate: 'startDate',
  expirationDate: 'expirationDate',
  termsAndConditions: 'termsAndConditions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserCouponScalarFieldEnum = {
  userId: 'userId',
  couponId: 'couponId'
};

exports.Prisma.TransportScalarFieldEnum = {
  id: 'id',
  number: 'number',
  baseVolume: 'baseVolume',
  baseWeight: 'baseWeight',
  currentVolume: 'currentVolume',
  currentWeight: 'currentWeight',
  isAvailable: 'isAvailable',
  agencyId: 'agencyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EnvoiScalarFieldEnum = {
  id: 'id',
  trackingNumber: 'trackingNumber',
  qrCodeUrl: 'qrCodeUrl',
  userId: 'userId',
  destinataireId: 'destinataireId',
  transportId: 'transportId',
  departureAgencyId: 'departureAgencyId',
  arrivalAgencyId: 'arrivalAgencyId',
  simulationStatus: 'simulationStatus',
  envoiStatus: 'envoiStatus',
  totalWeight: 'totalWeight',
  totalVolume: 'totalVolume',
  totalPrice: 'totalPrice',
  paid: 'paid',
  departureDate: 'departureDate',
  arrivalDate: 'arrivalDate',
  verificationToken: 'verificationToken',
  comment: 'comment',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TrackingEventScalarFieldEnum = {
  id: 'id',
  envoiId: 'envoiId',
  eventStatus: 'eventStatus',
  location: 'location',
  description: 'description',
  createdAt: 'createdAt'
};

exports.Prisma.AppointmentScalarFieldEnum = {
  id: 'id',
  envoiId: 'envoiId',
  agencyId: 'agencyId',
  date: 'date',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EnvoiCouponScalarFieldEnum = {
  envoiId: 'envoiId',
  couponId: 'couponId'
};

exports.Prisma.ParcelScalarFieldEnum = {
  id: 'id',
  envoiId: 'envoiId',
  height: 'height',
  weight: 'weight',
  width: 'width',
  length: 'length',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TarifsScalarFieldEnum = {
  id: 'id',
  agencyId: 'agencyId',
  weightRate: 'weightRate',
  volumeRate: 'volumeRate',
  baseRate: 'baseRate',
  fixedRate: 'fixedRate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransportScheduleScalarFieldEnum = {
  id: 'id',
  transportId: 'transportId',
  departureDate: 'departureDate',
  arrivalDate: 'arrivalDate',
  isHoliday: 'isHoliday',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  CARD: 'CARD',
  CASH: 'CASH'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  PAID: 'PAID',
  FAILED: 'FAILED'
};

exports.Role = exports.$Enums.Role = {
  CLIENT: 'CLIENT',
  SUPER_ADMIN: 'SUPER_ADMIN',
  DESTINATAIRE: 'DESTINATAIRE',
  AGENCY_ADMIN: 'AGENCY_ADMIN',
  ACCOUNTANT: 'ACCOUNTANT'
};

exports.VatType = exports.$Enums.VatType = {
  REDUCED: 'REDUCED',
  STANDARD: 'STANDARD',
  EXEMPT: 'EXEMPT'
};

exports.AddressType = exports.$Enums.AddressType = {
  HOME: 'HOME',
  OFFICE: 'OFFICE',
  BILLING: 'BILLING',
  SHIPPING: 'SHIPPING',
  OTHER: 'OTHER'
};

exports.SimulationStatus = exports.$Enums.SimulationStatus = {
  DRAFT: 'DRAFT',
  CONFIRMED: 'CONFIRMED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.EnvoiStatus = exports.$Enums.EnvoiStatus = {
  PENDING: 'PENDING',
  SENT: 'SENT',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  RETURNED: 'RETURNED'
};

exports.AppointmentStatus = exports.$Enums.AppointmentStatus = {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  CANCELLED: 'CANCELLED',
  RESCHEDULED: 'RESCHEDULED',
  COMPLETED: 'COMPLETED',
  MISSED: 'MISSED',
  IN_PROGRESS: 'IN_PROGRESS'
};

exports.TrackingEventStatus = exports.$Enums.TrackingEventStatus = {
  CREATED: 'CREATED',
  COLLECTED: 'COLLECTED',
  IN_TRANSIT: 'IN_TRANSIT',
  ARRIVED_AT_AGENCY: 'ARRIVED_AT_AGENCY',
  OUT_FOR_DELIVERY: 'OUT_FOR_DELIVERY',
  DELIVERED: 'DELIVERED',
  FAILED: 'FAILED'
};

exports.ActivityType = exports.$Enums.ActivityType = {
  AGENCY_CREATED: 'AGENCY_CREATED',
  AGENCY_UPDATED: 'AGENCY_UPDATED',
  AGENCY_DELETED: 'AGENCY_DELETED',
  CLIENT_LINKED: 'CLIENT_LINKED',
  CLIENT_UNLINKED: 'CLIENT_UNLINKED',
  CLIENT_UPDATED: 'CLIENT_UPDATED',
  CLIENT_DELETED: 'CLIENT_DELETED',
  CLIENT_CREATED: 'CLIENT_CREATED',
  ENVOI_CREATED: 'ENVOI_CREATED',
  ENVOI_UPDATED: 'ENVOI_UPDATED',
  ENVOI_DELETED: 'ENVOI_DELETED',
  PAYMENT_CREATED: 'PAYMENT_CREATED',
  PAYMENT_UPDATED: 'PAYMENT_UPDATED',
  PAYMENT_DELETED: 'PAYMENT_DELETED',
  TRACKING_EVENT_CREATED: 'TRACKING_EVENT_CREATED',
  TRACKING_EVENT_UPDATED: 'TRACKING_EVENT_UPDATED',
  TRACKING_EVENT_DELETED: 'TRACKING_EVENT_DELETED',
  APPOINTMENT_CREATED: 'APPOINTMENT_CREATED',
  APPOINTMENT_UPDATED: 'APPOINTMENT_UPDATED',
  APPOINTMENT_DELETED: 'APPOINTMENT_DELETED',
  NOTIFICATION_CREATED: 'NOTIFICATION_CREATED',
  NOTIFICATION_UPDATED: 'NOTIFICATION_UPDATED',
  NOTIFICATION_DELETED: 'NOTIFICATION_DELETED',
  AGENCY_ADMIN_ADDED: 'AGENCY_ADMIN_ADDED',
  AGENCY_ADMIN_REMOVED: 'AGENCY_ADMIN_REMOVED',
  ACCOUNTANT_ADDED: 'ACCOUNTANT_ADDED',
  ACCOUNTANT_REMOVED: 'ACCOUNTANT_REMOVED',
  SUPER_ADMIN_ADDED: 'SUPER_ADMIN_ADDED',
  SUPER_ADMIN_REMOVED: 'SUPER_ADMIN_REMOVED',
  TRANSPORT_CREATED: 'TRANSPORT_CREATED',
  TRANSPORT_UPDATED: 'TRANSPORT_UPDATED',
  TRANSPORT_DELETED: 'TRANSPORT_DELETED',
  TARIF_CREATED: 'TARIF_CREATED',
  TARIF_UPDATED: 'TARIF_UPDATED',
  TARIF_DELETED: 'TARIF_DELETED',
  PDF_EXPORTED: 'PDF_EXPORTED',
  CSV_EXPORTED: 'CSV_EXPORTED'
};

exports.Prisma.ModelName = {
  PasswordResetToken: 'PasswordResetToken',
  Payment: 'Payment',
  User: 'User',
  Account: 'Account',
  Session: 'Session',
  AgencyClients: 'AgencyClients',
  AgencyStaff: 'AgencyStaff',
  ActivityLog: 'ActivityLog',
  Authenticator: 'Authenticator',
  Notification: 'Notification',
  VatRate: 'VatRate',
  City: 'City',
  Country: 'Country',
  Timezone: 'Timezone',
  UserAddress: 'UserAddress',
  Address: 'Address',
  Agency: 'Agency',
  ClientDestinataire: 'ClientDestinataire',
  Coupon: 'Coupon',
  UserCoupon: 'UserCoupon',
  Transport: 'Transport',
  Envoi: 'Envoi',
  TrackingEvent: 'TrackingEvent',
  Appointment: 'Appointment',
  EnvoiCoupon: 'EnvoiCoupon',
  Parcel: 'Parcel',
  Tarifs: 'Tarifs',
  TransportSchedule: 'TransportSchedule'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "E:\\fullstack_project\\NextJs_Projects\\newColiApp\\prisma\\app\\generated\\prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "E:\\fullstack_project\\NextJs_Projects\\newColiApp\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../../.env"
  },
  "relativePath": "../../../..",
  "clientVersion": "6.7.0",
  "engineVersion": "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "POSTGRES_PRISMA_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// path: src/lib/prisma/schema.prisma\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"POSTGRES_PRISMA_URL\")\n  directUrl = env(\"POSTGRES_URL_NON_POOLING\")\n}\n\n//\n// datasource db {\n//   provider = \"postgresql\"\n//   url      = env(\"DATABASE_URL\")\n// }\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n  output          = \"app/generated/prisma/client\"\n}\n\nenum PaymentMethod {\n  CARD\n  CASH\n\n  @@map(\"payment_method\")\n}\n\nenum PaymentStatus {\n  PENDING\n  PAID\n  FAILED\n\n  @@map(\"payment_status\")\n}\n\nenum Role {\n  CLIENT\n  SUPER_ADMIN\n  DESTINATAIRE\n  AGENCY_ADMIN\n  ACCOUNTANT\n\n  @@map(\"roles\")\n}\n\nenum VatType {\n  REDUCED\n  STANDARD\n  EXEMPT\n\n  @@map(\"vat_types\")\n}\n\nenum AddressType {\n  HOME\n  OFFICE\n  BILLING\n  SHIPPING\n  OTHER\n\n  @@map(\"address_types\")\n}\n\nenum SimulationStatus {\n  DRAFT\n  CONFIRMED\n  COMPLETED\n  CANCELLED\n\n  @@map(\"simulation_status\")\n}\n\nenum EnvoiStatus {\n  PENDING\n  SENT\n  DELIVERED\n  CANCELLED\n  RETURNED\n\n  @@map(\"envoi_status\")\n}\n\nenum AppointmentStatus {\n  PENDING\n  CONFIRMED\n  CANCELLED\n  RESCHEDULED\n  COMPLETED\n  MISSED\n  IN_PROGRESS\n\n  @@map(\"appointment_status\")\n}\n\nenum TrackingEventStatus {\n  CREATED\n  COLLECTED\n  IN_TRANSIT\n  ARRIVED_AT_AGENCY\n  OUT_FOR_DELIVERY\n  DELIVERED\n  FAILED\n}\n\nmodel PasswordResetToken {\n  id        Int      @id @default(autoincrement())\n  token     String   @unique\n  expiresAt DateTime\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId    Int\n  createdAt DateTime @default(now())\n}\n\nmodel Payment {\n  id            Int           @id @default(autoincrement())\n  envoiId       Int           @unique\n  method        PaymentMethod\n  status        PaymentStatus @default(PENDING)\n  amount        Float\n  transactionId String?       @unique // utile pour Stripe (paiement par carte)\n  createdAt     DateTime      @default(now())\n  updatedAt     DateTime      @updatedAt\n\n  // Relations\n  envoi Envoi @relation(fields: [envoiId], references: [id])\n\n  @@map(\"payments\")\n}\n\n// User models\nmodel User {\n  id          Int       @id @default(autoincrement())\n  firstName   String?   @db.VarChar(50)\n  lastName    String?   @db.VarChar(50)\n  name        String?\n  birthDate   DateTime? @db.Timestamp(3)\n  email       String    @unique @db.VarChar(150)\n  phoneNumber String?   @unique @db.VarChar(50)\n  password    String?   @default(\"\") @db.VarChar(255)\n  image       String?   @default(\"\") @db.VarChar(255)\n  role        Role      @default(CLIENT) // Default to CLIENT role for new users\n\n  isVerified               Boolean?  @default(false) // Indique si l'utilisateur a vérifié son email\n  emailVerified            DateTime? // Date de vérification de l'email\n  verificationToken        String?   @unique @db.VarChar(255) // Token de vérification\n  verificationTokenExpires DateTime? // Date d'expiration du token\n  createdAt                DateTime  @default(now())\n  updatedAt                DateTime  @updatedAt\n\n  isEnterprise Boolean   @default(false)\n  lastLogin    DateTime?\n\n  // Account relations\n  accounts      Account[]\n  sessions      Session[]\n  authenticator Authenticator[]\n\n  // Envoi relations\n  sentEnvois     Envoi[] @relation(\"ClientEnvoi\") // Envois envoyés par le client\n  receivedEnvois Envoi[] @relation(\"DestinataireEnvoi\") // Envois reçus par le destinataire\n\n  // Relations\n  notificationsAsDestinataire Notification[] @relation(\"NotificationDestinataire\") // Notifications reçues par le destinataire\n  notificationAsClient        Notification[] @relation(\"NotificationClient\") // Notifications reçues par le client\n\n  // UserCoupon relations\n  userCoupons UserCoupon[]\n\n  // Client/ Destinataire links\n  clientLinks       ClientDestinataire[] @relation(\"Client\")\n  destinataireLinks ClientDestinataire[] @relation(\"Destinataire\")\n\n  // Agency admin relations\n  clientAgencies AgencyClients[]\n  agencyStaffs   AgencyStaff[]\n\n  // UserAddress relations\n  userAddresses      UserAddress[]\n  createdAgencies    Agency[]\n  staffsActivityLogs ActivityLog[]\n\n  passwordResetTokens PasswordResetToken[]\n\n  @@map(\"users\")\n}\n\nmodel Account {\n  userId            Int\n  type              String\n  provider          String\n  providerAccountId String\n  refresh_token     String?\n  access_token      String?\n  expires_at        Int?\n  token_type        String?\n  scope             String?\n  id_token          String?\n  session_state     String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@id([provider, providerAccountId])\n  @@map(\"accounts\")\n}\n\nmodel Session {\n  sessionToken String   @unique\n  userId       Int\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"sessions\")\n}\n\nmodel AgencyClients {\n  client   User   @relation(fields: [clientId], references: [id])\n  clientId Int\n  agency   Agency @relation(fields: [agencyId], references: [id])\n  agencyId Int\n\n  @@id([clientId, agencyId])\n  @@map(\"agency_clients\")\n}\n\nenum ActivityType {\n  AGENCY_CREATED\n  AGENCY_UPDATED\n  AGENCY_DELETED\n  CLIENT_LINKED\n  CLIENT_UNLINKED\n  CLIENT_UPDATED\n  CLIENT_DELETED\n  CLIENT_CREATED\n  ENVOI_CREATED\n  ENVOI_UPDATED\n  ENVOI_DELETED\n  PAYMENT_CREATED\n  PAYMENT_UPDATED\n  PAYMENT_DELETED\n  TRACKING_EVENT_CREATED\n  TRACKING_EVENT_UPDATED\n  TRACKING_EVENT_DELETED\n  APPOINTMENT_CREATED\n  APPOINTMENT_UPDATED\n  APPOINTMENT_DELETED\n  NOTIFICATION_CREATED\n  NOTIFICATION_UPDATED\n  NOTIFICATION_DELETED\n  AGENCY_ADMIN_ADDED\n  AGENCY_ADMIN_REMOVED\n  ACCOUNTANT_ADDED\n  ACCOUNTANT_REMOVED\n  SUPER_ADMIN_ADDED\n  SUPER_ADMIN_REMOVED\n  TRANSPORT_CREATED\n  TRANSPORT_UPDATED\n  TRANSPORT_DELETED\n  TARIF_CREATED\n  TARIF_UPDATED\n  TARIF_DELETED\n  PDF_EXPORTED\n  CSV_EXPORTED\n\n  @@map(\"activity_types\")\n}\n\nmodel AgencyStaff {\n  id        Int  @id @default(autoincrement())\n  staffId   Int\n  agencyId  Int\n  staffRole Role\n\n  staff  User   @relation(fields: [staffId], references: [id])\n  agency Agency @relation(fields: [agencyId], references: [id])\n\n  @@unique([staffId, agencyId, staffRole])\n  @@map(\"agency_staff\")\n}\n\nmodel ActivityLog {\n  id           Int          @id @default(autoincrement())\n  activityType ActivityType\n  staffId      Int?\n  agencyId     Int?\n  details      String?\n  staffRole    Role\n  createdAt    DateTime     @default(now())\n\n  // Relations\n  staff  User?   @relation(fields: [staffId], references: [id])\n  agency Agency? @relation(fields: [agencyId], references: [id])\n\n  @@map(\"activity_logs\")\n}\n\nmodel Authenticator {\n  credentialID         String  @unique\n  userId               Int\n  providerAccountId    String\n  credentialPublicKey  String\n  counter              Int\n  credentialDeviceType String\n  credentialBackedUp   Boolean\n  transports           String?\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@id([userId, credentialID])\n  @@map(\"authenticators\")\n}\n\nmodel Notification {\n  id             Int      @id @default(autoincrement())\n  message        String   @db.VarChar(255)\n  agencyId       Int      @db.Integer\n  destinataireId Int?     @db.Integer\n  clientId       Int?     @db.Integer\n  envoiId        Int      @db.Integer\n  isRead         Boolean  @default(false)\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  // Relations\n\n  agency                   Agency @relation(fields: [agencyId], references: [id])\n  envoi                    Envoi  @relation(fields: [envoiId], references: [id])\n  destinataireNotification User?  @relation(\"NotificationDestinataire\", fields: [destinataireId], references: [id])\n\n  clientNotification User? @relation(\"NotificationClient\", fields: [clientId], references: [id])\n\n  @@map(\"notifications\")\n}\n\n// [REMOVED: The entire UserAddress model was removed as requested]\n\nmodel VatRate {\n  id          Int      @id @default(autoincrement())\n  countryId   Int\n  itemClassId Int\n  vatPercent  Decimal  @db.Decimal(5, 2)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  vatType     VatType? @default(STANDARD)\n  country     Country  @relation(fields: [countryId], references: [id])\n\n  @@unique([countryId])\n  @@map(\"vat_rates\")\n}\n\nmodel City {\n  id        Int     @id @default(autoincrement())\n  name      String  @db.VarChar(100) // Nom de la ville\n  latitude  String? @db.VarChar(20) // Latitude\n  longitude String? @db.VarChar(20) // Longitude\n  countryId Int\n\n  // Relation\n  country   Country   @relation(fields: [countryId], references: [id])\n  addresses Address[]\n\n  @@unique([name, countryId]) // Unicité ville-pays\n  @@map(\"cities\")\n}\n\nmodel Country {\n  id        Int     @id @default(autoincrement())\n  name      String  @db.VarChar(100) // Nom du pays\n  iso2      String  @unique @db.VarChar(2) // Code ISO-2 (AF, FR, BE)\n  iso3      String  @unique @db.VarChar(3) // Code ISO-3 (AFG, FRA, BEL)\n  phonecode String  @db.VarChar(10) // Indicatif téléphonique\n  capital   String? @db.VarChar(50) // Capitale\n  currency  String? @db.VarChar(10) // Code de la monnaie (AFN, EUR)\n  latitude  String? @db.VarChar(20) // Latitude du pays\n  longitude String? @db.VarChar(20) // Longitude du pays\n  emoji     String? @db.VarChar(5) // 🇦🇫, 🇫🇷, 🇲🇦 (facultatif)\n\n  // Relations\n  cities    City[]\n  timezones Timezone[]\n  vatRates  VatRate[]\n\n  @@map(\"countries\")\n}\n\nmodel Timezone {\n  id           Int    @id @default(autoincrement())\n  zoneName     String @db.VarChar(50)\n  gmtOffset    Int\n  abbreviation String @db.VarChar(10)\n  countryId    Int\n\n  // Relations\n  country Country @relation(fields: [countryId], references: [id])\n\n  @@unique([zoneName, countryId])\n  @@map(\"timezones\")\n}\n\nmodel UserAddress {\n  id          Int         @id @default(autoincrement())\n  userId      Int\n  addressId   Int\n  createdAt   DateTime    @default(now())\n  updatedAt   DateTime    @updatedAt\n  addressType AddressType\n\n  // Relations\n  address Address @relation(fields: [addressId], references: [id])\n  user    User    @relation(fields: [userId], references: [id])\n\n  @@map(\"user_addresses\")\n}\n\nmodel Address {\n  id            Int           @id @default(autoincrement())\n  street        String        @db.VarChar(100)\n  complement    String?       @db.VarChar(100)\n  streetNumber  String?       @db.VarChar(10)\n  boxNumber     String?       @db.VarChar(10)\n  cityId        Int\n  createdAt     DateTime      @default(now())\n  updatedAt     DateTime      @updatedAt\n  city          City          @relation(fields: [cityId], references: [id])\n  userAddresses UserAddress[]\n  agency        Agency?\n\n  @@map(\"addresses\")\n}\n\nmodel Agency {\n  id             Int      @id @default(autoincrement())\n  name           String   @db.VarChar(50)\n  location       String?  @db.VarChar(250)\n  phoneNumber    String?  @db.VarChar(50)\n  email          String?  @db.VarChar(250)\n  vatNumber      String?  @db.VarChar(250)\n  addressId      Int      @unique\n  capacity       Int?     @db.Integer\n  availableSlots Int?     @db.Integer\n  updatedAt      DateTime @updatedAt\n  createdAt      DateTime @default(now())\n\n  // Relations\n  createdById    Int? // Nullable in case user gets deleted\n  createdBy      User?   @relation(fields: [createdById], references: [id])\n  arrivalEnvoi   Envoi[] @relation(\"ArrivalAgency\")\n  departureEnvoi Envoi[] @relation(\"DepartureAgency\")\n\n  notifications Notification[]\n  appointments  Appointment[]\n  transports    Transport[]\n  tarifs        Tarifs[]\n  address       Address        @relation(fields: [addressId], references: [id])\n\n  agencyClients AgencyClients[]\n  agencyStaff   AgencyStaff[]\n  activityLogs  ActivityLog[]\n\n  //  Interdire les doublons de noms dans une même ville\n  @@unique([name, addressId])\n  @@map(\"agencies\")\n}\n\nmodel ClientDestinataire {\n  id             Int      @id @default(autoincrement())\n  clientId       Int\n  destinataireId Int\n  createdAt      DateTime @default(now())\n\n  // Relations\n  client       User @relation(\"Client\", fields: [clientId], references: [id])\n  destinataire User @relation(\"Destinataire\", fields: [destinataireId], references: [id])\n\n  @@unique([clientId, destinataireId])\n  @@map(\"clients_destinataires\")\n}\n\nmodel Coupon {\n  id                 Int       @id @default(autoincrement())\n  couponCode         String    @db.VarChar(50)\n  discountAmount     Decimal   @db.Decimal(10, 2)\n  discountPercentage Decimal   @db.Decimal(5, 2)\n  numberOfUses       Int\n  startDate          DateTime  @db.Timestamp(3)\n  expirationDate     DateTime? @db.Timestamp(3)\n  termsAndConditions String?   @db.VarChar(255)\n  createdAt          DateTime  @default(now())\n  updatedAt          DateTime  @updatedAt\n\n  // Relations\n\n  userCoupon  UserCoupon[]\n  envoiCoupon EnvoiCoupon[]\n\n  @@map(\"coupons\")\n}\n\nmodel UserCoupon {\n  userId   Int\n  couponId Int\n\n  // Relations\n\n  user   User   @relation(fields: [userId], references: [id])\n  coupon Coupon @relation(fields: [couponId], references: [id])\n\n  @@id([userId, couponId])\n  @@map(\"user_coupons\")\n}\n\nmodel Transport {\n  id            Int     @id @default(autoincrement())\n  number        String  @db.VarChar(15)\n  baseVolume    Decimal @db.Decimal(12, 2)\n  baseWeight    Decimal @db.Decimal(10, 2)\n  currentVolume Decimal @db.Decimal(12, 2)\n  currentWeight Decimal @db.Decimal(10, 2)\n  isAvailable   Boolean @default(true)\n  agencyId      Int?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  envois             Envoi[]\n  transportSchedules TransportSchedule[]\n  agency             Agency?             @relation(fields: [agencyId], references: [id])\n\n  @@map(\"transports\")\n}\n\nmodel Envoi {\n  id             Int     @id @default(autoincrement())\n  trackingNumber String? @unique @db.VarChar(50)\n  qrCodeUrl      String? @default(\"\") @db.VarChar(255)\n  userId         Int?\n  destinataireId Int?\n  transportId    Int?\n\n  departureAgencyId Int\n  arrivalAgencyId   Int\n\n  simulationStatus SimulationStatus @default(DRAFT)\n  envoiStatus      EnvoiStatus      @default(PENDING)\n\n  totalWeight   Float\n  totalVolume   Float\n  totalPrice    Float\n  paid          Boolean  @default(false)\n  departureDate DateTime\n  arrivalDate   DateTime\n\n  verificationToken String  @unique @default(uuid()) @db.Uuid\n  comment           String? @default(\"No comment provided yet!\") @db.Text()\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  arrivalAgency   Agency     @relation(\"ArrivalAgency\", fields: [arrivalAgencyId], references: [id])\n  departureAgency Agency     @relation(\"DepartureAgency\", fields: [departureAgencyId], references: [id])\n  transport       Transport? @relation(fields: [transportId], references: [id], onDelete: Cascade)\n\n  destinataire User? @relation(\"DestinataireEnvoi\", fields: [destinataireId], references: [id])\n  client       User? @relation(\"ClientEnvoi\", fields: [userId], references: [id])\n\n  envoiCoupons   EnvoiCoupon[]\n  parcels        Parcel[]\n  appointments   Appointment?\n  notifications  Notification[]\n  payment        Payment?\n  trackingEvents TrackingEvent[]\n\n  @@map(\"envois\")\n}\n\nmodel TrackingEvent {\n  id          Int                 @id @default(autoincrement())\n  envoiId     Int\n  eventStatus TrackingEventStatus\n  location    String? // Ville, pays ou coordonnées GPS\n  description String?\n  createdAt   DateTime            @default(now())\n\n  envoi Envoi @relation(fields: [envoiId], references: [id])\n\n  @@map(\"tracking_events\")\n}\n\nmodel Appointment {\n  id        Int               @id @default(autoincrement())\n  envoiId   Int               @unique\n  agencyId  Int\n  date      DateTime          @db.Timestamp(3)\n  status    AppointmentStatus @default(PENDING)\n  createdAt DateTime          @default(now())\n  updatedAt DateTime          @updatedAt\n\n  // Relations\n\n  envoi  Envoi  @relation(fields: [envoiId], references: [id])\n  agency Agency @relation(fields: [agencyId], references: [id])\n\n  @@map(\"appointments\")\n}\n\nmodel EnvoiCoupon {\n  envoiId  Int\n  couponId Int\n\n  // Relations\n  envoi  Envoi  @relation(fields: [envoiId], references: [id])\n  coupon Coupon @relation(fields: [couponId], references: [id])\n\n  @@id([envoiId, couponId])\n  @@map(\"envoi_coupons\")\n}\n\nmodel Parcel {\n  id        Int      @id @default(autoincrement())\n  envoiId   Int\n  height    Decimal  @db.Decimal(5, 2)\n  weight    Decimal  @db.Decimal(5, 2)\n  width     Decimal  @db.Decimal(5, 2)\n  length    Decimal  @db.Decimal(5, 2)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n\n  envoi Envoi @relation(fields: [envoiId], references: [id])\n\n  @@map(\"parcels\")\n}\n\nmodel Tarifs {\n  id         Int      @id @default(autoincrement())\n  agencyId   Int?\n  weightRate Decimal  @db.Decimal(5, 2)\n  volumeRate Decimal  @db.Decimal(5, 2)\n  baseRate   Decimal  @db.Decimal(5, 2)\n  fixedRate  Decimal  @db.Decimal(5, 2)\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  // Relations\n\n  agency Agency? @relation(fields: [agencyId], references: [id])\n\n  @@map(\"tarifs\")\n}\n\nmodel TransportSchedule {\n  id            Int      @id @default(autoincrement())\n  transportId   Int\n  departureDate DateTime @db.Timestamp(3)\n  arrivalDate   DateTime @db.Timestamp(3)\n  isHoliday     Boolean  @default(false)\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  // Relations\n\n  transport Transport @relation(fields: [transportId], references: [id])\n\n  @@map(\"transport_schedules\")\n}\n",
  "inlineSchemaHash": "f051c4647873645fd669b1b9145af66f978edf7dedfa965d96ff0077f1eed27a",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"PasswordResetToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PasswordResetTokenToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"envoiId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"method\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"envoi\",\"kind\":\"object\",\"type\":\"Envoi\",\"relationName\":\"EnvoiToPayment\"}],\"dbName\":\"payments\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"verificationToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verificationTokenExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isEnterprise\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"authenticator\",\"kind\":\"object\",\"type\":\"Authenticator\",\"relationName\":\"AuthenticatorToUser\"},{\"name\":\"sentEnvois\",\"kind\":\"object\",\"type\":\"Envoi\",\"relationName\":\"ClientEnvoi\"},{\"name\":\"receivedEnvois\",\"kind\":\"object\",\"type\":\"Envoi\",\"relationName\":\"DestinataireEnvoi\"},{\"name\":\"notificationsAsDestinataire\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationDestinataire\"},{\"name\":\"notificationAsClient\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationClient\"},{\"name\":\"userCoupons\",\"kind\":\"object\",\"type\":\"UserCoupon\",\"relationName\":\"UserToUserCoupon\"},{\"name\":\"clientLinks\",\"kind\":\"object\",\"type\":\"ClientDestinataire\",\"relationName\":\"Client\"},{\"name\":\"destinataireLinks\",\"kind\":\"object\",\"type\":\"ClientDestinataire\",\"relationName\":\"Destinataire\"},{\"name\":\"clientAgencies\",\"kind\":\"object\",\"type\":\"AgencyClients\",\"relationName\":\"AgencyClientsToUser\"},{\"name\":\"agencyStaffs\",\"kind\":\"object\",\"type\":\"AgencyStaff\",\"relationName\":\"AgencyStaffToUser\"},{\"name\":\"userAddresses\",\"kind\":\"object\",\"type\":\"UserAddress\",\"relationName\":\"UserToUserAddress\"},{\"name\":\"createdAgencies\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToUser\"},{\"name\":\"staffsActivityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"ActivityLogToUser\"},{\"name\":\"passwordResetTokens\",\"kind\":\"object\",\"type\":\"PasswordResetToken\",\"relationName\":\"PasswordResetTokenToUser\"}],\"dbName\":\"users\"},\"Account\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":\"accounts\"},\"Session\":{\"fields\":[{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"sessions\"},\"AgencyClients\":{\"fields\":[{\"name\":\"client\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AgencyClientsToUser\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToAgencyClients\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":\"agency_clients\"},\"AgencyStaff\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"staffRole\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AgencyStaffToUser\"},{\"name\":\"agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToAgencyStaff\"}],\"dbName\":\"agency_staff\"},\"ActivityLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"activityType\",\"kind\":\"enum\",\"type\":\"ActivityType\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staffRole\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ActivityLogToUser\"},{\"name\":\"agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"ActivityLogToAgency\"}],\"dbName\":\"activity_logs\"},\"Authenticator\":{\"fields\":[{\"name\":\"credentialID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"credentialPublicKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"counter\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"credentialDeviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"credentialBackedUp\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"transports\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuthenticatorToUser\"}],\"dbName\":\"authenticators\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"destinataireId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"envoiId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToNotification\"},{\"name\":\"envoi\",\"kind\":\"object\",\"type\":\"Envoi\",\"relationName\":\"EnvoiToNotification\"},{\"name\":\"destinataireNotification\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationDestinataire\"},{\"name\":\"clientNotification\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationClient\"}],\"dbName\":\"notifications\"},\"VatRate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"itemClassId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"vatPercent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vatType\",\"kind\":\"enum\",\"type\":\"VatType\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CountryToVatRate\"}],\"dbName\":\"vat_rates\"},\"City\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CityToCountry\"},{\"name\":\"addresses\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToCity\"}],\"dbName\":\"cities\"},\"Country\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iso2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iso3\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phonecode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capital\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emoji\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cities\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToCountry\"},{\"name\":\"timezones\",\"kind\":\"object\",\"type\":\"Timezone\",\"relationName\":\"CountryToTimezone\"},{\"name\":\"vatRates\",\"kind\":\"object\",\"type\":\"VatRate\",\"relationName\":\"CountryToVatRate\"}],\"dbName\":\"countries\"},\"Timezone\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"zoneName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gmtOffset\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"abbreviation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CountryToTimezone\"}],\"dbName\":\"timezones\"},\"UserAddress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"addressId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"addressType\",\"kind\":\"enum\",\"type\":\"AddressType\"},{\"name\":\"address\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToUserAddress\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserAddress\"}],\"dbName\":\"user_addresses\"},\"Address\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"complement\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"streetNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"boxNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"AddressToCity\"},{\"name\":\"userAddresses\",\"kind\":\"object\",\"type\":\"UserAddress\",\"relationName\":\"AddressToUserAddress\"},{\"name\":\"agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AddressToAgency\"}],\"dbName\":\"addresses\"},\"Agency\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vatNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"availableSlots\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AgencyToUser\"},{\"name\":\"arrivalEnvoi\",\"kind\":\"object\",\"type\":\"Envoi\",\"relationName\":\"ArrivalAgency\"},{\"name\":\"departureEnvoi\",\"kind\":\"object\",\"type\":\"Envoi\",\"relationName\":\"DepartureAgency\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"AgencyToNotification\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AgencyToAppointment\"},{\"name\":\"transports\",\"kind\":\"object\",\"type\":\"Transport\",\"relationName\":\"AgencyToTransport\"},{\"name\":\"tarifs\",\"kind\":\"object\",\"type\":\"Tarifs\",\"relationName\":\"AgencyToTarifs\"},{\"name\":\"address\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToAgency\"},{\"name\":\"agencyClients\",\"kind\":\"object\",\"type\":\"AgencyClients\",\"relationName\":\"AgencyToAgencyClients\"},{\"name\":\"agencyStaff\",\"kind\":\"object\",\"type\":\"AgencyStaff\",\"relationName\":\"AgencyToAgencyStaff\"},{\"name\":\"activityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"ActivityLogToAgency\"}],\"dbName\":\"agencies\"},\"ClientDestinataire\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"destinataireId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Client\"},{\"name\":\"destinataire\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Destinataire\"}],\"dbName\":\"clients_destinataires\"},\"Coupon\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"couponCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discountPercentage\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"numberOfUses\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expirationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"termsAndConditions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userCoupon\",\"kind\":\"object\",\"type\":\"UserCoupon\",\"relationName\":\"CouponToUserCoupon\"},{\"name\":\"envoiCoupon\",\"kind\":\"object\",\"type\":\"EnvoiCoupon\",\"relationName\":\"CouponToEnvoiCoupon\"}],\"dbName\":\"coupons\"},\"UserCoupon\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"couponId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserCoupon\"},{\"name\":\"coupon\",\"kind\":\"object\",\"type\":\"Coupon\",\"relationName\":\"CouponToUserCoupon\"}],\"dbName\":\"user_coupons\"},\"Transport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"baseVolume\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"baseWeight\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currentVolume\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currentWeight\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"envois\",\"kind\":\"object\",\"type\":\"Envoi\",\"relationName\":\"EnvoiToTransport\"},{\"name\":\"transportSchedules\",\"kind\":\"object\",\"type\":\"TransportSchedule\",\"relationName\":\"TransportToTransportSchedule\"},{\"name\":\"agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToTransport\"}],\"dbName\":\"transports\"},\"Envoi\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trackingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qrCodeUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"destinataireId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"transportId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"departureAgencyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"arrivalAgencyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"simulationStatus\",\"kind\":\"enum\",\"type\":\"SimulationStatus\"},{\"name\":\"envoiStatus\",\"kind\":\"enum\",\"type\":\"EnvoiStatus\"},{\"name\":\"totalWeight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalVolume\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"paid\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"departureDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"arrivalDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"verificationToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"arrivalAgency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"ArrivalAgency\"},{\"name\":\"departureAgency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"DepartureAgency\"},{\"name\":\"transport\",\"kind\":\"object\",\"type\":\"Transport\",\"relationName\":\"EnvoiToTransport\"},{\"name\":\"destinataire\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DestinataireEnvoi\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClientEnvoi\"},{\"name\":\"envoiCoupons\",\"kind\":\"object\",\"type\":\"EnvoiCoupon\",\"relationName\":\"EnvoiToEnvoiCoupon\"},{\"name\":\"parcels\",\"kind\":\"object\",\"type\":\"Parcel\",\"relationName\":\"EnvoiToParcel\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToEnvoi\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"EnvoiToNotification\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"EnvoiToPayment\"},{\"name\":\"trackingEvents\",\"kind\":\"object\",\"type\":\"TrackingEvent\",\"relationName\":\"EnvoiToTrackingEvent\"}],\"dbName\":\"envois\"},\"TrackingEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"envoiId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"eventStatus\",\"kind\":\"enum\",\"type\":\"TrackingEventStatus\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"envoi\",\"kind\":\"object\",\"type\":\"Envoi\",\"relationName\":\"EnvoiToTrackingEvent\"}],\"dbName\":\"tracking_events\"},\"Appointment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"envoiId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AppointmentStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"envoi\",\"kind\":\"object\",\"type\":\"Envoi\",\"relationName\":\"AppointmentToEnvoi\"},{\"name\":\"agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToAppointment\"}],\"dbName\":\"appointments\"},\"EnvoiCoupon\":{\"fields\":[{\"name\":\"envoiId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"couponId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"envoi\",\"kind\":\"object\",\"type\":\"Envoi\",\"relationName\":\"EnvoiToEnvoiCoupon\"},{\"name\":\"coupon\",\"kind\":\"object\",\"type\":\"Coupon\",\"relationName\":\"CouponToEnvoiCoupon\"}],\"dbName\":\"envoi_coupons\"},\"Parcel\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"envoiId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"length\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"envoi\",\"kind\":\"object\",\"type\":\"Envoi\",\"relationName\":\"EnvoiToParcel\"}],\"dbName\":\"parcels\"},\"Tarifs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"weightRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"volumeRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"baseRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"fixedRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToTarifs\"}],\"dbName\":\"tarifs\"},\"TransportSchedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"transportId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"departureDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"arrivalDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isHoliday\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transport\",\"kind\":\"object\",\"type\":\"Transport\",\"relationName\":\"TransportToTransportSchedule\"}],\"dbName\":\"transport_schedules\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    POSTGRES_PRISMA_URL: typeof globalThis !== 'undefined' && globalThis['POSTGRES_PRISMA_URL'] || typeof process !== 'undefined' && process.env && process.env.POSTGRES_PRISMA_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

